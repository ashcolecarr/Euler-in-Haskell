-- Project Euler Problem 27

import Data.Time (getCurrentTime, diffUTCTime)

main = do
  start <- getCurrentTime
  putStr $ "The product of a and b that produces the maximum number of primes for consecutive values of n is "
  putStrLn $ show (getLongest $ remainderList dList) ++ "."
  stop <- getCurrentTime
  putStrLn $ "Program execution took " ++ show (diffUTCTime stop start) ++ " seconds."
  


factors :: Int -> [Int]
factors m = factor m (head primes) (tail primes) 
  where
    factor m n ns
      | m < 2 = []
      | m < n ^ 2 = [m]
      | m `mod` n == 0 = n : factor (m `div` n) n ns
      | otherwise = factor m (head ns) (tail ns)
                    
primes :: [Int]
primes = 2 : filter (\n-> head (factors n) == n) [3,5..]

minNum :: Int
minNum = -999

maxNum :: Int
maxNum = 999