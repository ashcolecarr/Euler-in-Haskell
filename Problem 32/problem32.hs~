-- Project Euler Problem 32

import Data.Time (getCurrentTime, diffUTCTime)
import Data.List (permutations)

main = do
  start <- getCurrentTime
  putStr $ "The sum of all products whose multiplicand/multiplier/product identity can be written as a 1 through 9 pandigital "
  putStrLn $ show (countChange totalMoney (length coins)) ++ "."
  stop <- getCurrentTime
  putStrLn $ "Program execution took " ++ show (diffUTCTime stop start) ++ " seconds."

-- To get the pandigital digits needed, the multiplicand and multiplier need to be a certain number of digits, otherwise the product will have too many or too few digits.
multiplicand :: Int
multiplicand = 2

multiplier :: Int
multiplier = 3

digits :: [Int]
digits = [1..9]

permutationList :: [[Int]]
permutationList = permutations digits

pandigits :: [[Int]] -> Int
pandigits